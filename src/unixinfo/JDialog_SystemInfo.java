/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package unixinfo;

import java.io.File;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.UnknownHostException;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author sparenberg
 */
public class JDialog_SystemInfo extends javax.swing.JDialog {
    private Object FileSystemUtils;

    /**
     * Creates new form JDialog_SystemInfo
     * @param parent
     * @param modal
     */
    public JDialog_SystemInfo(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel_CPU = new javax.swing.JLabel();
        jLabel_CPU_text = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("System Info's");

        jLabel_CPU.setText(getVerfuegbarereCPUs());

        jLabel_CPU_text.setText("Verf√ºgbare CPU's:");

        jLabel1.setText("Freier Arbeitsspeicher (MBytes):");

        jLabel2.setText(getFreierArbeitsspeicher());

        jLabel3.setText(getGesamtArbeitsspeicher());

        jLabel4.setText("Gesamter Arbeitsspeicher (MBytes):");

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText(getAngemeldeterBenutzer());

        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Angemeldeter Benutzer:");

        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText(getComputername());

        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Computername:");

        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText(getIpadresse());

        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("IP-Adresse:");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText(getFestplattenSpeicher());
        jScrollPane1.setViewportView(jTextArea1);

        jLabel11.setText("Festplattenspeicher:");

        jLabel12.setText(getBetriebssystem());

        jLabel13.setText("Betriebssystem:");

        jLabel14.setText("Betriebssystem Version:");

        jLabel15.setText(getBetriebssystemVersion());

        jLabel16.setText("Betriebssystem Architektur:");

        jLabel17.setText(getBetriebssystemArchitektur());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel6)
                            .addComponent(jLabel10)
                            .addComponent(jLabel_CPU_text))
                        .addGap(100, 100, 100)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7))
                                .addGap(72, 72, 72)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel17)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel_CPU)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                                .addComponent(jLabel11)
                                .addGap(33, 33, 33)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(44, 44, 44))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel15)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9)
                    .addComponent(jLabel17)
                    .addComponent(jLabel16))
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel_CPU_text)
                            .addComponent(jLabel_CPU)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialog_SystemInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialog_SystemInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialog_SystemInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialog_SystemInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialog_SystemInfo dialog = new JDialog_SystemInfo(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    public String getComputername(){
        String ausgabe = null;
        ausgabe = System.getenv("HOSTNAME");
        return ausgabe;
    }
    
    public String getAngemeldeterBenutzer(){
        String ausgabe = null;
        ausgabe = System.getProperty("user.name");
        return ausgabe;
    }
    
    public String getBetriebssystem(){
        String ausgabe = null;
        ausgabe = System.getProperty("os.name");
        return ausgabe;
    }
    
    public String getBetriebssystemVersion(){
        String ausgabe = null;
        ausgabe = System.getProperty("os.version");
        return ausgabe;
    }
    
    public String getBetriebssystemArchitektur(){
        String ausgabe = null;
        ausgabe = System.getProperty("os.arch");
        return ausgabe;
    }
    
    public String getVerfuegbarereCPUs(){
        String ausgabe = null;
        ausgabe = ""+Runtime.getRuntime().availableProcessors();
        return ausgabe;
    }
    
    public String getFreierArbeitsspeicher(){
        long speicher = 0;
        String ausgabe = "";
        speicher = Runtime.getRuntime().freeMemory();
        speicher = speicher / 1024 / 1024;
        ausgabe=""+speicher;
        return ausgabe;
    }
    
    public String getGesamtArbeitsspeicher(){
        long speicher = 0;
        String ausgabe = "";
        speicher = Runtime.getRuntime().totalMemory();
        speicher = speicher / 1024 ;
        ausgabe=""+speicher;
        return ausgabe;
    }
    
    public String getIpadresse(){
        String ip = null;
        try {
            ip=InetAddress.getLocalHost().getHostAddress();
        } catch (UnknownHostException ex) {
            Logger.getLogger(UnixInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
        return ip;
    }
    public String getFestplattenSpeicher(){
        String ausgabe_laufwerk = null;
        //int i = 1;
        //for(i=1; i<=4; i++){
            
            final String laufwerk = "/dev/sda3";
            System.out.println(laufwerk);
            File datei = new File(laufwerk); 
            System.out.println(datei);
           // if(datei.exists()){
            ausgabe_laufwerk="Festplattenkapazit√§t\n--------------------" + "\n";
            ausgabe_laufwerk+="Bytes: " + datei.getTotalSpace() + "\n";
            ausgabe_laufwerk+="KBytes: " + datei.getTotalSpace() / 1024 + "\n";
            ausgabe_laufwerk+="MBytes: " + datei.getTotalSpace() / 1024 / 1024 + "\n";
            ausgabe_laufwerk+="GBytes: " + datei.getTotalSpace() / 1024 / 1024 / 1024 + "\n\n";
 
            ausgabe_laufwerk+="Freier Speicherplatz\n--------------------" + "\n";
            ausgabe_laufwerk+="Bytes: " + datei.getFreeSpace() + "\n";
            ausgabe_laufwerk+="KBytes: " + datei.getFreeSpace() / 1024 + "\n";
            ausgabe_laufwerk+="MBytes: " + datei.getFreeSpace() / 1024 / 1024 + "\n";
            ausgabe_laufwerk+="GBytes: " + datei.getFreeSpace() / 1024 / 1024 / 1024 + "\n";
            //System.out.println(FileSystemUtils.freeSpaceKb("/"));
            
            //i++;
                    
            //}
        //return ausgabe_laufwerk;
        //}
        return ausgabe_laufwerk;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_CPU;
    private javax.swing.JLabel jLabel_CPU_text;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
